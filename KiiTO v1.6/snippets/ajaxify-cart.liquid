<script>

/**
 * Module to ajaxify all add to cart forms on the page.
 *
 * Copyright (c) 2015 Caroline Schnapp (11heavens.com)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 */
Shopify.AjaxifyCart = (function($) {

  // Some configuration options.
  // I have separated what you will never need to change from what
  // you might change.

  var _config = {

    // What you might want to change
    addToCartBtnLabel:             'Add to cart',
    addedToCartBtnLabel:           'Thank you!',
    addingToCartBtnLabel:          'Adding...',
    soldOutBtnLabel:               'Sold Out',
    howLongTillBtnReturnsToNormal: 1000, // in milliseconds.
    cartCountSelector:             '.cart-count, #cart-count a:first, #gocart p a, #cart .checkout em, .item-count',
    cartTotalSelector:             '#cart-price',
    // 'aboveForm' for top of add to cart form,
    // 'belowForm' for below the add to cart form, and
    // 'nextButton' for next to add to cart button.
    feedbackPosition:              'nextButton',

    // What you will never need to change
    addToCartBtnSelector:          '[type="submit"]',
    addToCartFormSelector:         'form[action="/cart/add"]',
    shopifyAjaxAddURL:             '/cart/add.js',
    shopifyAjaxCartURL:            '/cart.js'
  };

  // We need some feedback when adding an item to the cart.
  // Here it is.
  var _showFeedback = function(success, html, $addToCartForm) {
    $('.ajaxified-cart-feedback').remove();
    var feedback = '<p class="ajaxified-cart-feedback ' + success + '">' + html + '</p>';
    switch (_config.feedbackPosition) {
      case 'aboveForm':
        $addToCartForm.before(feedback);
        break;
      case 'belowForm':
        $addToCartForm.after(feedback);
        break;
      case 'nextButton':
      default:
        $addToCartForm.find(_config.addToCartBtnSelector).after(feedback);
        break;
    }
    // If you use animate.css
//     $('.ajaxified-cart-feedback').addClass('animated bounceInDown');
    $('.ajaxified-cart-feedback').slideDown();
  };
  var _setText = function($button, label) {
    if ($button.children().length) {
      $button.children().each(function() {
        if ($.trim($(this).text()) !== '') {
          $(this).text(label);
        }
      });
    }
    else {
      $button.val(label).text(label);
    }
  };
  var _init = function() {
    $(document).ready(function() {
      $(_config.addToCartFormSelector).submit(function(e) {
        e.preventDefault();
        var $addToCartForm = $(this);
        var $addToCartBtn = $addToCartForm.find(_config.addToCartBtnSelector);
        _setText($addToCartBtn, _config.addingToCartBtnLabel);
        $addToCartBtn.addClass('disabled').prop('disabled', true);
        // Add to cart.
        $.ajax({
          url: _config.shopifyAjaxAddURL,
          dataType: 'json',
          type: 'post',
          data: $addToCartForm.serialize(),
          success: function(itemData) {
            // Re-enable add to cart button.
            $addToCartBtn.addClass('inverted');
            _setText($addToCartBtn, _config.addedToCartBtnLabel);
            _showFeedback('success','<i class="fa fa-check"></i> Added to cart! <a href="/cart">View cart</a> or <a href="/collections/all">continue shopping</a>.',$addToCartForm);
            window.setTimeout(function(){
              $addToCartBtn.prop('disabled', false).removeClass('disabled').removeClass('inverted');
              _setText($addToCartBtn,_config.addToCartBtnLabel);
            }, _config.howLongTillBtnReturnsToNormal);
            // Update cart count and show cart link.
            $.getJSON(_config.shopifyAjaxCartURL, function(cart) {
              if (_config.cartCountSelector && $(_config.cartCountSelector).length) {
                var value = $(_config.cartCountSelector).html() || '0';
                $(_config.cartCountSelector).html(value.replace(/[0-9]+/,cart.item_count)).removeClass('hidden-count');
              }
              if (_config.cartTotalSelector && $(_config.cartTotalSelector).length) {
                if (typeof Currency !== 'undefined' && typeof Currency.moneyFormats !== 'undefined') {
                  var newCurrency = '';
                  if ($('[name="currencies"]').length) {
                    newCurrency = $('[name="currencies"]').val();
                  }
                  else if ($('#currencies span.selected').length) {
                    newCurrency = $('#currencies span.selected').attr('data-currency');
                  }
                  if (newCurrency) {
                    $(_config.cartTotalSelector).html('<span class=money>' + Shopify.formatMoney(Currency.convert(cart.total_price, "{{ shop.currency }}", newCurrency), Currency.money_format[newCurrency]) + '</span>');
                  }
                  else {
                    $(_config.cartTotalSelector).html(Shopify.formatMoney(cart.total_price, "{{ shop.money_format | remove: "'" | remove: '"' }}"));
                  }
                }
                else {
                  $(_config.cartTotalSelector).html(Shopify.formatMoney(cart.total_price, "{{ shop.money_format | remove: "'" | remove: '"' }}"));
                }
              };
            });
          },
          error: function(XMLHttpRequest) {
            var response = eval('(' + XMLHttpRequest.responseText + ')');
            response = response.description;
            if (response.slice(0,4) === 'All ') {
              _showFeedback('error', response.replace('All 1 ', 'All '), $addToCartForm);
              $addToCartBtn.prop('disabled', false);
              _setText($addToCartBtn, _config.soldOutBtnLabel);
              $addToCartBtn.prop('disabled',true);
            }
            else {
              _showFeedback('error', '<i class="fa fa-warning"></i> ' + response, $addToCartForm);
              $addToCartBtn.prop('disabled', false).removeClass('disabled');
              _setText($addToCartBtn, _config.addToCartBtnLabel);
            }
          }
        });
        return false;
      });
    });
  };
  return {
    init: function(params) {
        // Configuration
        params = params || {};
        // Merging with defaults.
        $.extend(_config, params);
        // Action
        $(function() {
          _init();
        });
    },
    getConfig: function() {
      return _config;
    }
  }
})(jQuery);

Shopify.AjaxifyCart.init();








     jQuery.ajax({
        type: 'GET',
        url: 'http://drinkkiito.myshopify.com/cart.json',
        dataType: 'jsonp',
        success: function(data) {
            var item_count = data['item_count'];
            var total_price = data['total_price']/100;

            //If there are items in cart
            if ( item_count > 0 ) {
                // cart count
                jQuery('.cart-count').text(item_count);

                // mini cart data
                jQuery('.mini-cart').attr('id','mini-cart');
                jQuery('.mini-cart-subtotal .price').text( '$' + total_price.toFixed(2) );

                var cart_list = [];

                for( var i = 0; i < item_count; i++ ){
                    if ( data['items'][i]['id'] != null ) {
                        var item_id = data['items'][i]['id'];
                        var product_title = data['items'][i]['product_title'];
                        // var product_title = data['items'][i]['title'];
                        var product_handle = data['items'][i]['handle'];
                        var quantity = data['items'][i]['quantity'];
                        var line_price = data['items'][i]['price']/100;
                        var url = data['items'][i]['url'];
                        var image_url = data['items'][i]['image'];
                        var variants = data['items'][i]['variant_options'];

                        if ( product_title == 'Gift Wrap' ) {
                            var product_url = product_title;
                        } else {
                            var product_url = '<a href="http://mysite.myshopify.com' + url + '">' + product_title + '</a>';
                        }

                        var options = [];
                        for ( var o = 0; o < variants.length; o++ ) {
                            var selected = data['items'][i]['variant_options'][o];
                            if ( selected !== 'Default Title' ) {
                                options.push( selected + '<br>' );
                            }
                        }
                        var selected_options = options.join('');

                        cart_list.push('<div class="row mini-cart-product"><div class="col span_3 mini-image"><div class="product_image"><img src="' + image_url + '"  alt="' + product_title + '" /></div></div><div class="col span_6">' + product_url + '<br>' + selected_options + '</div><div class="col span_3 text-right">$'+ line_price.toFixed(2) +'<br>x ' + quantity + '<input type="hidden" id="updates_' + item_id + '" value="' + quantity + '" /></div></div>');
                    } //endif
                } // endfor

                jQuery('.mini-cart-items').append( cart_list.join('') );
            }
        }
    });


// var GLOBO = GLOBO || {};
// (function($) {

// 	GLOBO.extral_theme = {
//       init: function() {


        //header aside
//         $(document).on("click", ".la_com_action--aside_header .component-target,.btn-aside-toggle", function(t) {
//           	t.preventDefault(), $(this).hasClass("btn-master-toggle") ? $('body').toggleClass("open-master-aside") : $('body').toggleClass("open-header-aside")
//         });



//        	$(document) .on('click', '.la-overlay-global', function(e){
//           e.preventDefault();
//           $('.la_com_action--primary-menu').removeClass('active');
//           $('body').removeClass('open-aside open-search-form open-cart-aside open-mobile-menu open-advanced-shop-filter open-header-aside open-master-aside');
//         });


//       }
//     };
//   })(jQuery);



</script>

{% comment %}
  If you want to animate your feedback message.
{% endcomment %}


{{ '//cdnjs.cloudflare.com/ajax/libs/animate.css/3.1.0/animate.min.css' | stylesheet_tag }}

<style>
.ajaxified-cart-feedback {
  display: block;
  line-height: 36px;
  font-size: 90%;
  vertical-align: middle;
}
.ajaxified-cart-feedback.success {
  color: #3D9970;
}
.ajaxified-cart-feedback.error {
  color: #FF4136; 
}
.ajaxified-cart-feedback a {
  border-bottom: 1px solid;
}
</style>



<!-- recharge ajax add -->
<!-- https://support.rechargepayments.com/hc/en-us/articles/360008830653-ReCharge-Integration-Guide -->
<style>
 #AjaxifyCart .additional-checkout-buttons, #ajaxifyCart .additional-checkout-buttons {
    display:none;
}
</style>
{% if template != 'cart'  %}
    <script src='//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js?ckcachebust=586352454'></script>
	<script>
	rjQuery = jQuery.noConflict( true );
    var subscription_active='{{shop.metafields.subscriptions.subscription_active}}'
    function get_cookie(k){return(document.cookie.match('(^|; )'+k+'=([^;]*)')||0)[2]}
    if (get_cookie('recharge')=='true' || subscription_active=='true') {
        rjQuery('body').on('click','form[action="/checkout"] input[type="submit"], #ajaxifyCart [name="checkout"], #AjaxifyCart [name="checkout"], #shoppingBagInner [name="checkout"]', function(e){
            e.preventDefault();
            window.location.href = '/cart';
        })
        rjQuery('.additional-checkout-buttons').hide()
        rjQuery(document).ready(function(){
            rjQuery('.additional-checkout-buttons').hide()
        })
    }
    </script>
{% endif %}<br>
